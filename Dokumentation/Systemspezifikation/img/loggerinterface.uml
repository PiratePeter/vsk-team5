@startuml

skinparam monochrome true
skinparam defaultFontName Droid Sans
skinparam dpi 150

package "loggerinterface" {
    interface Logger {
        + log(level:LogLevel, message:String):void
        + log(level:LogLevel, message:String, args:Object[]):void
        + log(level:LogLevel, throwable:Throwable, message:String):void
        + log(level:LogLevel, throwable:Throwable, message:String, args:Object[]):void
    }
    note bottom of Logger
        trace(), debug() etc. omitted
    end note
    class Configuration {
        - jarFile:String
        - loggerSetupClass:String
        - loggerSetupConfiguration:LoggerSetupConfiguration
        + getJarFile():String
        + setJarFile(jarFile:String):void
        + getLoggerSetupClass():String
        + setLoggerSetupClass(loggerSetupClass:String):void
        + getLoggerSetupConfiguration():LoggerSetupConfiguration
        + setLoggerSetupConfiguration(loggerSetupConfiguration:LoggerSetupConfiguration):void
    }
    class ConfigurationParser {
        + getConfiguration():Configuration
        + saveConfiguration(configuration:Configuration):void
    }
    class LoggerManager {
        {static} - xmlConfiguration:Configuration
        - setup:LoggerSetup
        + LoggerManager()
        + LoggerManager(configuration:Configuration)
        + getLogger():Logger
        + hasProperLoggerSetup():boolean
        + setLogLevel(logLevel:LogLevel):void
        + getLogLevel():LogLevel
        + setHostAndPort(host:String, port:int):void
        + hasProperLogger():boolean
        {static} - getConfiguration():Configuration
        - createLoggerSetupInstance(configuration:Configuration):LoggerSetup
        - getClassLoader(jarFile:String):ClassLoader
    }
    class LoggerSetup {
        ~ getLogger():Logger
        ~ getLogger(loggerName:String):Logger
        ~ configure(configure:LoggerSetupConfiguration):void
        ~ setLogLevel(logLevel:LogLevel)
        ~ getLogLevel():LogLevel
        ~ setHostAndPort(host:String, port:int):void
    }
    class LoggerSetupConfiguration {
        - level:LogLevel
        - host:String
        - port:int
        + setLevel(level:LogLevel):void
        + getHost():String
        + setHost(host:String):String
        + getPort():int
        + setPort(port:int):void
    }
    enum LogLevel {
        {static} + TRACE
        {static} + DEBUG
        {static} + INFO
        {static} + WARNING
        {static} + ERROR
        {static} + CRITICAL
        - label:String
        - priority:int
        - LogLevel(label:String, priority:int)
        + getLabel():String
        + getPriority():int
    }
    Configuration o-- LoggerSetupConfiguration
    ConfigurationParser --> Configuration
    LoggerManager o-- Configuration
    LoggerManager o-- LoggerSetup
    LoggerManager --> LogLevel
    LoggerSetup o-- Logger
    LoggerSetup --> LoggerSetupConfiguration
    LoggerSetup --> LogLevel
    LoggerSetupConfiguration --> LogLevel
}

@enduml
