@startuml

skinparam monochrome true
skinparam defaultFontName Droid Sans
skinparam dpi 150

package "loggercommon" {
    interface LogMessage {
        + getLevel():String
        + getCreationTimestamp():Instant
        + getServerEntryTimestamp():Instant
        + getSource():String
        + getMessage():String
    }
    class Message {
        {static} - serialVersionUID:long
        - level:String
        - creationTimestamp:Instant
        - serverEntryTimestamp:Instant
        - message:String
        - source:String
        + Message(level:String, message:String)
        + Message(level:String, creationTimestamp:Instant, serverEntryTimestamp:Instant, source:String, message:String)
        + hashCode():int
        + equals(other:Object):boolean
        + toString():String
    }
    LogMessage <|.. Message
}

package "loggercomponent" {
    class LoggerComponent {
        - actualLevel:LogLevel
        - output:ObjectOutputStream
        - localLogging:Boolean
        ---
        {static} + create(level:LogLevel, output:ObjectOutputStream, setup:LoggerComponentSetup):LoggerComponent
        - LoggerComponent(level:LogLevel, output:ObjectOutputStream, setup:LoggerComponentSetup)
        + log(level:LogLevel, message:String):void
        + log(level:LogLevel, message:String, args:Object[]):void
        + log(level:LogLevel, throwable:Throwable, message:String):void
        + log(level:LogLevel, throwable:Throwable, message:String, args:Object[]):void
        - send(message:Message):void
        - logLocally(message:LogMessage):void
        - toErrorMessage(throwable:Throwable, String:message):String
    }
}

package "loggerserver" {
    class ConcurrentClientHandler << Runnable >> {
        - socket:Socket
        - input:ObjectInputStream
        - persistorAdapter:StringPersistorAdapter
        - messageSource:String
        - server:ConcurrentLoggerServer
        ---
        {static} + listen(socket:Socket, persistorAdapter:StringPersistorAdapter, server:ConcurrentLoggerServer):ConcurrentClientHandler
        - ConcurrentClientHandler(socket:Socket, input:ObjectInputStream, persistorAdapter:StringPersistorAdapter, messageSouce:String, server:ConcurrentLoggerServer)
        + run():void
    }
}

LoggerComponent --> Message
ConcurrentClientHandler --> LogMessage

@enduml
